#!/usr/bin/env perl
use Mojo::Base -strict;

# Let us try to make a switchable database!
# Replace this file with your own database setup and restart the application to
# see if it works. Contributing your example setup to Slovo is welcome!
$app->log->debug("Loading Mojo::SQLite");
Mojo::Loader::load_class 'Mojo::SQLite';    # or Mojo::Pg, or Mojo::Mysql

my ($mode, $moniker) = ($app->mode, $app->moniker);
my $db_file = $app->resources->child("data/$moniker.$mode.sqlite");
my $config = {db_foo => 'чудесно!'};

# A common db helper - one for all database types. Using it allows you to
# switch to another database adapter just by replacing this file with the one
# for Mojo::Pg or Mojo::mysql etc.
$app->helper(dbx => sub { Mojo::SQLite->new($db_file) });
$app->dbx->max_connections(3);

# Load migrations from file and migrate to latest version
$app->dbx->migrations->from_file(
                $app->resources->child("data/${\ $app->VERSION}.sql"))->migrate;

# Generated resources
# ./script/slovo generate resources -D dbx -t "groups,users" \
#   -T lib/Slovo/resources/templates --api_dir lib/Slovo/resources
# helpers for most tables
for my $t (qw(groups users)) {
  my $class = "Slovo::Model::" . Mojo::Util::camelize($t);
  $app->log->debug("Loading model $class");
  Mojo::Loader::load_class $class;
  $app->helper($t => sub { state $self = $class->new(dbx => shift->dbx) });
}

$config;
